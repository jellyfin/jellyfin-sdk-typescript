name: SDK Update API from Spec

on:
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:

jobs:
  api-spec-update:
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'jellyfin/jellyfin-sdk-typescript' }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
          check-latest: true
          cache: npm

      - name: Download stable OpenAPI schema
        run: |
          curl -sL https://repo.jellyfin.org/releases/openapi/jellyfin-openapi-stable.json -o openapi.json
          npm run fix-schema
          cp openapi.json $HOME

      - name: Set STABLE_API_VERSION
        run: |
          VERSION=$(jq -r .info.version openapi.json)
          echo "STABLE_API_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Install Node.js dependencies
        run: npm ci --no-audit

      - name: Update generated sources and create pull request
        uses: technote-space/create-pr-action@2ef8ccf07634a251bc5682894a8ccb222d0dfbd1 # tag=v2
        with:
          EXECUTE_COMMANDS: |
            cp $HOME/openapi.json .
            npm run build:generated-client
            sed -i "s/API_VERSION = '.*'/API_VERSION = '${{ env.STABLE_API_VERSION }}'/" src/jellyfin.ts
          COMMIT_MESSAGE: 'Update generated sources to ${{ env.STABLE_API_VERSION }}'
          COMMIT_NAME: 'jellyfin-bot'
          COMMIT_EMAIL: 'team@jellyfin.org'
          PR_BRANCH_PREFIX: 'openapi-update-'
          PR_BRANCH_NAME: '${PR_ID}'
          PR_TITLE: 'Update OpenAPI to ${{ env.STABLE_API_VERSION }}'
          PR_BODY: |
            ## Changed files

            <details>
              <summary>${FILES_SUMMARY}</summary>

              ${FILES}

            </details>
          GITHUB_TOKEN: ${{ secrets.JF_BOT_TOKEN }}
